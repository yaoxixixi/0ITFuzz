typedef struct { 
    string file; 
    string output;
} MATRIX[1000]; 

local MATRIX filename;
filename[0].file = "D:\\0pdf种子\\new\\11.pdf";
filename[0].output = filename[0].file + ".csv";
filename[1].file = "D:\\0pdf种子\\new\\12.pdf";
filename[1].output = filename[1].file + ".csv";
filename[2].file = "D:\\0pdf种子\\new\\123.pdf";
filename[2].output = filename[2].file + ".csv";
filename[3].file = "D:\\0pdf种子\\new\\1751_1.pdf";
filename[3].output = filename[3].file + ".csv";
.
.
.
filename[418].file = "D:\\0pdf种子\\new\\zh_file1.pdf";
filename[418].output = filename[418].file + ".csv";
filename[419].file = "D:\\0pdf种子\\new\\zh_function_list.pdf";
filename[419].output = filename[419].file + ".csv";
filename[420].file = "D:\\0pdf种子\\new\\zh_shared_document.pdf";
filename[420].output = filename[420].file + ".csv";




int fileIndex;  // 只在循环外部声明一次
int i;
for (i = 0; i < 421; i++) {
    // 打开文件并指定运行模板和界面
    fileIndex = FileOpen(filename[i].file, true, "", false);  // 运行模板，并自动选择接口
    if (fileIndex >= 0) {
        // 文件成功打开
        RunTemplate("PDF.v0.3.3.bt");  // 运行模板
        ExpandAll();  // 展开所有内容
        // 导出为 CSV
        ExportCSV(filename[i].output);  // 将内容导出为 CSV
	//FileClose();
    } else {
        // 打开文件失败
        Printf("Error opening file: %s\n", filename[i].file);
    }
}
